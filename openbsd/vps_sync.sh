#!/usr/bin/env bash
# ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó

# ‚ïë  VPS Sync - Complete G:\pub Mirror to Production VPS         ‚ïë

# ‚ïë  Target: dev@185.52.176.18:/home/dev/pub                     ‚ïë

# ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

#

# MANIFEST - What Gets Synced:

#   ‚úì openbsd.sh           - Complete OpenBSD infrastructure setup

#   ‚úì repligen/            - AI generation (scrape, LoRA, masterpieces)

#   ‚úì postpro/             - Cinematic image processing (libvips)

#   ‚úì dilla/               - J Dilla beat generator (FluidSynth)

#   ‚úì botnet/              - Multi-bot orchestration (LangChain)

#   ‚úì master.json          - Global configuration

#   ‚úì [Rails apps]/        - All Rails applications

#   ‚úì *.sh scripts         - All deployment automation

#

# EXCLUDED (auto-generated/temp):

#   ‚úó .git/, logs/, tmp/, node_modules/

#   ‚úó *.db (SQLite - regenerated on VPS)

#   ‚úó *.log files

#

# USAGE:

#   ./vps_sync.sh          # Mirror everything to VPS

#

# POST-SYNC STEPS:

#   ssh dev@185.52.176.18

#   cd ~/pub

#   ./openbsd.sh --pre-point    # Setup infrastructure

#   ./openbsd.sh --post-point   # Configure TLS & services

#

set -euo pipefail

VPS_HOST="185.52.176.18"
VPS_USER="dev"

VPS_BASE="/home/dev/pub"

LOCAL_BASE="/g/pub"

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë         COMPLETE MIRROR - G:\pub ‚Üí VPS                       ‚ïë"

echo "‚ïë              dev@185.52.176.18:/home/dev/pub                 ‚ïë"

echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"

echo ""

# Test connection
echo "üîå Testing VPS connection..."

if ! ssh -o ConnectTimeout=5 -o StrictHostKeyChecking=no "$VPS_USER@$VPS_HOST" "echo 'Connected'" 2>/dev/null; then

    echo "‚ùå Cannot connect to VPS"

    exit 1

fi

echo "‚úì Connection successful"
echo ""

# Create base directory on VPS
echo "üìÅ Creating base directory on VPS..."

ssh -o StrictHostKeyChecking=no "$VPS_USER@$VPS_HOST" "mkdir -p $VPS_BASE"

# Show what will be synced
echo "üìä Analyzing local directory..."

cd "$LOCAL_BASE"

TOTAL_SIZE=$(du -sh . 2>/dev/null | cut -f1)
FILE_COUNT=$(find . -type f 2>/dev/null | wc -l)

echo "Local directory: $LOCAL_BASE"
echo "Total size: $TOTAL_SIZE"

echo "Files: $FILE_COUNT"

echo ""

# Confirm
read -p "Proceed with full mirror? (Y/n): " -n 1 -r

echo

if [[ ! $REPLY =~ ^[Yy]$ ]] && [[ ! -z $REPLY ]]; then

    echo "Cancelled."

    exit 0

fi

echo ""
echo "üöÄ Starting rsync mirror..."

echo "=" * 70

echo ""

# Rsync with progress
rsync -avz --progress \

    --exclude='.git/' \

    --exclude='*.log' \

    --exclude='tmp/' \

    --exclude='log/' \

    --exclude='node_modules/' \

    --exclude='*.db-journal' \

    --exclude='.DS_Store' \

    --exclude='Thumbs.db' \

    --exclude='*.swp' \

    --exclude='*.swo' \

    --exclude='*~' \

    --exclude='.vscode/' \

    --exclude='.idea/' \

    --exclude='__pycache__/' \

    --exclude='*.pyc' \

    --exclude='coverage/' \

    --exclude='.sass-cache/' \

    --exclude='repligen.db' \

    --exclude='botnet.db' \

    -e "ssh -o StrictHostKeyChecking=no" \

    "$LOCAL_BASE/" \

    "$VPS_USER@$VPS_HOST:$VPS_BASE/"

RSYNC_EXIT=$?
echo ""
echo "=" * 70

if [ $RSYNC_EXIT -eq 0 ]; then
    echo "‚úì Mirror complete!"

else

    echo "‚ö†Ô∏è  Rsync completed with warnings (exit code: $RSYNC_EXIT)"

fi

echo ""
echo "üîß Setting permissions on VPS..."

ssh -o StrictHostKeyChecking=no "$VPS_USER@$VPS_HOST" << 'ENDSSH'
cd ~/pub

# Make all .sh and .rb files executable
find . -type f -name "*.sh" -exec chmod +x {} \;

find . -type f -name "*.rb" -exec chmod +x {} \;

# Specific scripts
chmod +x openbsd.sh 2>/dev/null || true

chmod +x repligen/*.rb 2>/dev/null || true

chmod +x postpro/postpro.rb 2>/dev/null || true

chmod +x dilla/dilla.rb 2>/dev/null || true

chmod +x botnet/botnet.rb 2>/dev/null || true

# Create necessary directories
mkdir -p logs tmp output photos repligen/output postpro/output dilla/dilla_output botnet/logs

echo "‚úì Permissions set"
ENDSSH

echo ""
echo "üìã Creating deployment manifest..."

ssh -o StrictHostKeyChecking=no "$VPS_USER@$VPS_HOST" << 'ENDSSH'
cd ~/pub

cat > MANIFEST.txt << 'EOF'
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó

‚ïë              COMPLETE MIRROR DEPLOYMENT                      ‚ïë

‚ïë                   $(date)                        ‚ïë

‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

MIRRORED STRUCTURE:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

/home/dev/pub/
‚îú‚îÄ‚îÄ openbsd.sh          OpenBSD infrastructure & Rails apps

‚îú‚îÄ‚îÄ vps_sync.sh         This mirror script

‚îú‚îÄ‚îÄ repligen/           AI generation studio (scrape, LoRA, chains)

‚îú‚îÄ‚îÄ postpro/            Cinematic post-processing (libvips)

‚îú‚îÄ‚îÄ dilla/              J Dilla beat generator (FluidSynth)

‚îú‚îÄ‚îÄ botnet/             Multi-bot orchestration

‚îú‚îÄ‚îÄ master.json         Global configuration

‚îî‚îÄ‚îÄ [Rails apps]        All Rails applications

PROJECT STATUS:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚úì OpenBSD infrastructure
‚úì Repligen (AI generation)

‚úì Postpro (image processing)

‚úì Dilla (beat generation)

‚úì Botnet (bot management)

‚úì Master configuration

‚úì All deployment scripts

NEXT STEPS:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

1. Set API keys in ~/.profile:
   export REPLICATE_API_TOKEN="..."

   export ANTHROPIC_API_KEY="..."

2. Run OpenBSD setup:
   cd ~/pub

   ./openbsd.sh --pre-point

3. Install project dependencies:
   cd ~/pub/repligen && gem33 install sqlite3 ferrum --no-document

   cd ~/pub/postpro && gem33 install ruby-vips tty-prompt --no-document

   cd ~/pub/dilla && gem33 install midilib --no-document

4. Test each project:
   cd ~/pub/repligen && ruby33 repligen.rb --stats

   cd ~/pub/postpro && ruby33 postpro.rb

   cd ~/pub/dilla && ruby33 dilla.rb list

5. Run post-point setup:
   cd ~/pub

   ./openbsd.sh --post-point

USEFUL COMMANDS:
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

# Check directory structure
tree -L 2 ~/pub

# View this manifest
cat ~/pub/MANIFEST.txt

# Re-sync from local machine
./vps_sync.sh

# Full deployment
cd ~/pub && ./deploy_all.sh

EOF
cat MANIFEST.txt
ENDSSH

echo ""
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"

echo "‚ïë                MIRROR COMPLETE! üéâ                           ‚ïë"

echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"

echo ""

echo "üìç VPS Location: $VPS_USER@$VPS_HOST:$VPS_BASE"

echo ""

echo "üîó SSH and view:"

echo "  ssh $VPS_USER@$VPS_HOST"

echo "  cd ~/pub"

echo "  cat MANIFEST.txt"

echo ""

echo "üìö Next steps:"

echo "  1. SSH into VPS"

echo "  2. Set API keys"

echo "  3. Run: cd ~/pub && ./openbsd.sh --pre-point"

echo ""

