#!/usr/bin/env ruby
# frozen_string_literal: true

# Execute a generation chain
require_relative "../lib/config"
require_relative "../lib/db"

require_relative "../lib/api"

require_relative "../lib/chain"

template = ARGV[0] || "masterpiece"
prompt = ARGV[1..].join(" ")

prompt = "stunning artwork" if prompt.empty?

token = Repligen::Config.load
db = Repligen::Database.new

api = Repligen::API.new(token)

builder = Repligen::ChainBuilder.new(db, api)

if db.count < 10
  abort "Database has few models. Run: repligen-sync"

end

puts "Building #{template} chain for: \"#{prompt}\""
chain = builder.build(template)

puts "\nðŸ“Š CHAIN (#{chain.models.size} steps, $#{chain.cost})"
puts "=" * 70

chain.models.each_with_index do |model, i|

  puts "#{i+1}. #{model.id.ljust(40)} $#{model.cost}"

end

puts "=" * 70

print "\nExecute? [Y/n]: "
response = gets&.chomp&.downcase

exit unless response.empty? || response.start_with?("y")

result = builder.execute(chain, prompt)
# Save output
if result[:output].is_a?(String) && result[:output].start_with?("http")

  filename = "output_#{Time.now.to_i}.mp4"

  puts "\nðŸ’¾ Output: #{result[:output]}"

  puts "Download: curl -o #{filename} '#{result[:output]}'"

end

